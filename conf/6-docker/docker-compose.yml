#                                 #
# This is my docker compose file. #
#                                 #

version: "3.4"

# Services.
services:

    # Bitwarden
    bitwarden:
        container_name: bitwarden
        environment:
            - LOG_FILE=/data/bitwarden.log
            - SIGNUPS_ALLOWED=true
        image: bitwardenrs/server:latest
        ports:
            - "8000:80"
        restart: unless-stopped
        volumes:
            - /home/alex/.docker/config/bitwarden:/data:rw

    # Deluge
    deluge:
        container_name: deluge
        environment:
            - PUID=1000
            - PGID=998
            - TZ=Europe/Amsterdam
        image: linuxserver/deluge:latest
        ports:
            - "58846:58846"
            - "58946:58946"
            - "8112:8112"
        restart: unless-stopped
        volumes:
            - /home/alex/.docker/config/deluge:/config:rw
            - /home/alex/downloads/deluge:/downloads:rw

    # Duplicati
    # duplicati:
    #     container_name: duplicati
    #     environment:
    #         - PUID=1000
    #         - PGID=998
    #     image: duplicati/duplicati:latest
    #     ports:
    #         - "8200:8200"
    #     restart: unless-stopped
    #     volumes:
    #         - /home/alex/.docker/config/duplicati:/duplicati:rw
    #         - /boot:/data-boot:rw
    #         - /etc:/data-etc:rw
    #         - /home:/data-home:rw
    #         - /opt:/data-opt:rw
    #         - /root:/data-root:rw
    #         - /srv:/data-srv:rw
    #         - /usr:/data-usr:rw
    #         - /var:/data-var:rw

    # Emby
    # emby:
    #     container_name: emby
    #     environment:
    #         - PUID=1000
    #         - PGID=998
    #     image: emby/embyserver:latest
    #     ports:
    #         - "8096:8096"
    #         - "8920:8920"
    #     restart: unless-stopped
    #     volumes:
    #         - /home/alex/.docker/config/emby:/config:rw
    #         - /mnt/vd0/data/videos:/mnt/share1:rw

    # Firefly
    # firefly:
    #     container_name: firefly
    #     environment:
    #         - PUID=1000
    #         - PGID=998
    #         - TZ=Europe/Amsterdam
    #         - APP_KEY=${FIREFLY_APP_KEY}
    #         - DB_HOST=${FIREFLY_DB_HOST}
    #         - DB_PORT=${FIREFLY_DB_PORT}
    #         - DB_DATABASE=${FIREFLY_DB_DATABASE}
    #         - DB_USERNAME=${FIREFLY_DB_USERNAME}
    #         - DB_PASSWORD=${FIREFLY_DB_PASSWORD}
    #     image: jc5x/firefly-iii:latest
    #     ports:
    #         - "8222:8080"
    #     volumes:
    #         - /firefly-iii-export:/home/alex/.docker/config/firefly-iii-export
    #         - /firefly-iii-upload:/home/alex/.docker/config/firefly-iii-upload

    # Gitea
    gitea:
        container_name: gitea
        environment:
            - USER_UID=1000
            - USER_GID=998
            - DB_TYPE={GITEA_DB_TYPE}
            - DB_HOST=${GITEA_DB_HOST}
            - DB_NAME=${GITEA_DB_DATABASE}
            - DB_USER=${GITEA_DB_USERNAME}
            - DB_PASSWD=${GITEA_DB_PASSWORD}
        image: gitea/gitea:latest
        ports:
            - "3000:3000"
            - "222:22"
        restart: unless-stopped
        volumes:
            - /home/alex/.docker/config/gitea:/data
            - /etc/timezone:/etc/timezone:ro
            - /etc/localtime:/etc/localtime:ro

    # Heimdall
    heimdall:
        container_name: heimdall
        environment:
            - PUID=1000
            - PGID=998
            - TZ=Europe/Amsterdam
        image: linuxserver/heimdall:latest
        ports:
            - "9009:80"
            - "9010:443"
        restart: unless-stopped
        volumes:
            - /home/alex/.docker/config/heimdall:/config:rw

    # Jackett
    jackett:
        container_name: jackett
        environment:
            - PUID=1000
            - PGID=998
            - TZ=Europe/Amsterdam
        image: linuxserver/jackett:latest
        ports:
            - "9117:9117"
        restart: unless-stopped
        volumes:
            - /home/alex/.docker/config/jackett:/config:rw
            - /home/alex/downloads/jackett:/downloads:rw
            - /etc/localtime:/etc/localtime:ro

    # Maria DB
    mariadb:
        container_name: mariadb
        environment:
            - MYSQL_ROOT_PASSWORD=nginxproxymanager
            - MYSQL_DATABASE=nginxproxymanager
            - MYSQL_USER=nginxproxymanager
            - MYSQL_PASSWORD=nginxproxymanager
        image: mariadb
        restart: unless-stopped
        volumes:
            - /home/alex/.docker/config/mariadb/data/mysql:/var/lib/mysql:rw

    # Nginx proxy manager
    # nginx-proxy-manager:
    #     container_name: nginx-proxy-manager
    #     depends_on: 
    #         - mariadb
    #     environment:
    #         - PUID=1000
    #         - GUID=998
    #     image: jc21/nginx-proxy-manager:latest
    #     ports:
    #         - "8181:81"
    #         - "8080:80"
    #         - "4443:443"
    #     restart: unless-stopped
    #     volumes:
    #         - /home/alex/.docker/config/nginx-proxy-manager/config:/app/config:rw
    #         - /home/alex/.docker/config/nginx-proxy-manager/data:/data:rw
    #         - /home/alex/.docker/config/nginx-proxy-manager/letsencrypt:/etc/letsencrypt:rw

    # Organizr
    # organizr:
    #     container_name: organizr
    #     environment:
    #         - PUID=1000
    #         - PGID=998
    #     image: organizrtools/organizr-v2:latest
    #     ports:
    #         - "8081:80"
    #     restart: unless-stopped
    #     volumes:
    #         - /home/alex/.docker/config/organizr:/config:rw

    # Ouroboros
    ouroboros:
        container_name: ouroboros
        environment:
            - CLEANUP=true
            - CRON=0 4 * * *
            - LOG_LEVEL=info
            - SELF_UPDATE=true
            - IGNORE=mariadb
            - NOTIFIERS=${OUROBOROS_NOTIFIERS}
            - TZ=Europe/Amsterdam
        image: pyouroboros/ouroboros:latest
        restart: unless-stopped
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock

    # PHP
    php:
        container_name: php
        environment:
            - TZ=Europe/Amsterdam
        image: php:7.2-apache
        ports:
            - "82:80"
        restart: unless-stopped
        volumes:
            - /var/www/html/php72:/var/www/html:rw

    # PHPMyAdmin
    # phpmyadmin:
    #     container_name: phpmyadmin
    #     environment:
    #         - TZ=Europe/Amsterdam
    #         - PMA_HOST=127.0.0.1
    #     image: phpmyadmin/phpmyadmin
    #     ports:
    #         - "83:80"
    #     restart: unless-stopped

    # Plex
    plex:
        container_name: plex
        environment:
            - ADVERTISE_IP=http://192.168.1.111:32400/
            - PLEX_UID=1000
            - PLEX_GID=998
            - TZ=Europe/Amsterdam
            - PLEX_CLAIM=${PLEX_CLAIM}
        image: plexinc/pms-docker:latest
        ports:
            - "32400:32400"
        restart: unless-stopped
        volumes:
            - /home/alex/.docker/config/plex:/config:rw
            - /home/alex/downloads/plex/transcode:/transcode:rw
            - /mnt/vd0/data/videos:/data:rw
    
    # Portainer
    portainer:
        command: -H unix:///var/run/docker.sock
        container_name: portainer
        environment:
            - TZ=Europe/Amsterdam
        image: portainer/portainer-ce:latest
        ports:
            - "9000:9000"
        restart: unless-stopped
        volumes:
            - /home/alex/.docker/config/portainer:/data:rw
            - /etc/localtime:/etc/localtime:ro
            - /home/alex/.docker/shared:/shared:rw
            - /var/run/docker.sock:/var/run/docker.sock:rw

    # Radarr
    radarr:
        container_name: radarr
        environment:
            - PUID=1000
            - PGID=998
            - TZ=Europe/Amsterdam
        image: linuxserver/radarr:preview
        ports:
            - "7878:7878"
        restart: unless-stopped
        volumes:
            - /home/alex/.docker/config/radarr:/config:rw
            - /mnt/vd0/data/videos:/movies:rw
            - /home/alex/downloads/deluge:/downloads:rw

    # Sonarr
    sonarr:
        container_name: sonarr
        environment:
            - PUID=1000
            - PGID=998
            - TZ=Europe/Amsterdam
        image: linuxserver/sonarr:preview
        ports:
            - "8989:8989"
        restart: unless-stopped
        volumes:
            - /home/alex/.docker/config/sonarr:/config:rw
            - /mnt/vd0/data/videos:/tv:rw
            - /home/alex/downloads/deluge:/downloads:rw

    # Tautulli
    tautulli:
        container_name: tautulli
        environment:
            - PUID=1000
            - GUID=998
            - TZ=Europe/Amsterdam
        image: tautulli/tautulli:latest
        ports:
            - "8182:8181"
        restart: unless-stopped
        volumes:
            - /home/alex/.docker/config/tautulli:/config:rw
            - "/home/alex/.docker/config/plex/Library/Application Support/Plex Media Server/Logs:/plex_logs:ro"

    # Wordpress
    # wordpress:
    #     container_name: wordpress
    #     environment:
    #         - PUID=1000
    #         - PGID=998
    #         - TZ=Europe/Amsterdam
    #         - WORDPRESS_DB_NAME=${WP_DB_NAME}
    #         - WORDPRESS_TABLE_PREFIX=${WP_DB_TB_PREFIX}
    #         - WORDPRESS_DB_HOST=${WP_DB_HOST}
    #         - WORDPRESS_DB_PASSWORD=${WP_DB_PASSWORD}
    #     image: wordpress:5.3.0-php7.2-fpm
    #     ports:
    #         - "82:9000"
    #     restart: unless-stopped
    #     volumes:
    #         - /wordpress:/var/www/html