#                                 #
# This is my docker compose file. #
#                                 #

version: "3.4"

# Services.
services:

    # Bitwarden
    bitwarden:
        container_name: bitwarden
        environment:
            - LOG_FILE=/data/bitwarden.log
            - SIGNUPS_ALLOWED=true
        image: bitwardenrs/server:latest
        ports:
            - "8000:80"
        restart: ${US}
        volumes:
            - ${CONFIG}/bitwarden:/data:rw

    # Deluge
    deluge:
        container_name: deluge
        environment:
            - PUID=${UID}
            - PGID=${GID}
            - TZ=${TZ}
        image: linuxserver/deluge:latest
        ports:
            - "58846:58846"
            - "58946:58946"
            - "8112:8112"
        restart: ${US}
        volumes:
            - ${CONFIG}/deluge:/config:rw
            - /home/alex/downloads/deluge:/downloads:rw

    # Duplicati
    # duplicati:
    #     container_name: duplicati
    #     environment:
    #         - PUID=${UID}
    #         - PGID=${GID}
    #     image: duplicati/duplicati:latest
    #     ports:
    #         - "8200:8200"
    #     restart: ${US}
    #     volumes:
    #         - ${CONFIG}/duplicati:/duplicati:rw
    #         - /boot:/data-boot:rw
    #         - /etc:/data-etc:rw
    #         - /home:/data-home:rw
    #         - /opt:/data-opt:rw
    #         - /root:/data-root:rw
    #         - /srv:/data-srv:rw
    #         - /usr:/data-usr:rw
    #         - /var:/data-var:rw

    # Emby
    # emby:
    #     container_name: emby
    #     environment:
    #         - PUID=${UID}
    #         - PGID=${GID}
    #     image: emby/embyserver:latest
    #     ports:
    #         - "8096:8096"
    #         - "8920:8920"
    #     restart: ${US}
    #     volumes:
    #         - ${CONFIG}/emby:/config:rw
    #         - /mnt/vd0/data/videos:/mnt/share1:rw

    # Firefly
    # firefly:
    #     container_name: firefly
    #     environment:
    #         - PUID=${UID}
    #         - PGID=${GID}
    #         - TZ=${TZ}
    #         - APP_KEY=${FIREFLY_APP_KEY}
    #         - DB_HOST=${FIREFLY_DB_HOST}
    #         - DB_PORT=${FIREFLY_DB_PORT}
    #         - DB_DATABASE=${FIREFLY_DB_DATABASE}
    #         - DB_USERNAME=${FIREFLY_DB_USERNAME}
    #         - DB_PASSWORD=${FIREFLY_DB_PASSWORD}
    #     image: jc5x/firefly-iii:latest
    #     ports:
    #         - "8222:8080"
    #     volumes:
    #         - /firefly-iii-export:${CONFIG}/firefly-iii-export
    #         - /firefly-iii-upload:${CONFIG}/firefly-iii-upload

    # Gitea
    gitea:
        container_name: gitea
        environment:
            - USER_UID=${UID}
            - USER_GID=${GID}
            - DB_TYPE={GITEA_DB_TYPE}
            - DB_HOST=${GITEA_DB_HOST}
            - DB_NAME=${GITEA_DB_DATABASE}
            - DB_USER=${GITEA_DB_USERNAME}
            - DB_PASSWD=${GITEA_DB_PASSWORD}
        image: gitea/gitea:latest
        ports:
            - "3000:3000"
            - "222:22"
        restart: ${US}
        volumes:
            - ${CONFIG}/gitea:/data
            - /etc/timezone:/etc/timezone:ro
            - /etc/localtime:/etc/localtime:ro

    # Heimdall
    heimdall:
        container_name: heimdall
        environment:
            - PUID=${UID}
            - PGID=${GID}
            - TZ=${TZ}
        image: linuxserver/heimdall:latest
        ports:
            - "9009:80"
            - "9010:443"
        restart: ${US}
        volumes:
            - ${CONFIG}/heimdall:/config:rw

    # Jackett
    jackett:
        container_name: jackett
        environment:
            - PUID=${UID}
            - PGID=${GID}
            - TZ=${TZ}
        image: linuxserver/jackett:latest
        ports:
            - "9117:9117"
        restart: ${US}
        volumes:
            - ${CONFIG}/jackett:/config:rw
            - /home/alex/downloads/jackett:/downloads:rw
            - /etc/localtime:/etc/localtime:ro

    # Maria DB
    mariadb:
        container_name: mariadb
        environment:
            - MYSQL_ROOT_PASSWORD=nginxproxymanager
            - MYSQL_DATABASE=nginxproxymanager
            - MYSQL_USER=nginxproxymanager
            - MYSQL_PASSWORD=nginxproxymanager
        image: mariadb
        restart: ${US}
        volumes:
            - ${CONFIG}/mariadb/data/mysql:/var/lib/mysql:rw

    # Nginx proxy manager
    nginx-proxy-manager:
        container_name: nginx-proxy-manager
        depends_on: 
            - mariadb
        environment:
            - PUID=${UID}
            - GUID=${GID}
        image: jc21/nginx-proxy-manager:latest
        ports:
            - "8181:81"
            - "8080:80"
            - "4443:443"
        restart: ${US}
        volumes:
            - ${CONFIG}/nginx-proxy-manager/config:/app/config:rw
            - ${CONFIG}/nginx-proxy-manager/data:/data:rw
            - ${CONFIG}/nginx-proxy-manager/letsencrypt:/etc/letsencrypt:rw

    # Organizr
    # organizr:
    #     container_name: organizr
    #     environment:
    #         - PUID=${UID}
    #         - PGID=${GID}
    #     image: organizrtools/organizr-v2:latest
    #     ports:
    #         - "8081:80"
    #     restart: ${US}
    #     volumes:
    #         - ${CONFIG}/organizr:/config:rw

    # Ouroboros
    ouroboros:
        container_name: ouroboros
        environment:
            - CLEANUP=true
            - CRON=0 4 * * *
            - LOG_LEVEL=info
            - SELF_UPDATE=true
            - IGNORE=mariadb
            - NOTIFIERS=${OUROBOROS_NOTIFIERS}
            - TZ=${TZ}
        image: pyouroboros/ouroboros:latest
        restart: ${US}
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock

    # PHP
    php:
        container_name: php
        environment:
            - TZ=${TZ}
        image: php:7.2-apache
        ports:
            - "82:80"
        restart: ${US}
        volumes:
            - /var/www/html/php72:/var/www/html:rw

    # PHPMyAdmin
    # phpmyadmin:
    #     container_name: phpmyadmin
    #     environment:
    #         - TZ=${TZ}
    #         - PMA_HOST=127.0.0.1
    #     image: phpmyadmin/phpmyadmin
    #     ports:
    #         - "83:80"
    #     restart: ${US}

    # Plex
    plex:
        container_name: plex
        devices:
            - "/dev/dri:/dev/dri"
        environment:
            - ADVERTISE_IP=http://192.168.1.111:32400/
            - PLEX_UID=${UID}
            - PLEX_GID=${GID}
            - TZ=${TZ}
            - PLEX_CLAIM=${PLEX_CLAIM}
              NVIDIA_DRIVER_CAPIBILITIES=compute,video,utility
            - NVIDIA_VISIBLE_DEVICES=all
        image: plexinc/pms-docker:latest
        ports:
            - "32400:32400"
        restart: ${US}
        volumes:
            - ${CONFIG}/plex:/config:rw
            - /home/alex/downloads/plex/transcode:/transcode:rw
            - /mnt/vd0/data/videos:/data:rw
    
    # Portainer
    portainer:
        command: -H unix:///var/run/docker.sock
        container_name: portainer
        environment:
            - TZ=${TZ}
        image: portainer/portainer-ce:latest
        ports:
            - "9000:9000"
        restart: ${US}
        volumes:
            - ${CONFIG}/portainer:/data:rw
            - /etc/localtime:/etc/localtime:ro
            - /home/alex/.docker/shared:/shared:rw
            - /var/run/docker.sock:/var/run/docker.sock:rw

    # Radarr
    radarr:
        container_name: radarr
        environment:
            - PUID=${UID}
            - PGID=${GID}
            - TZ=${TZ}
        image: linuxserver/radarr:nightly
        ports:
            - "7878:7878"
        restart: ${US}
        volumes:
            - ${CONFIG}/radarr:/config:rw
            - /mnt/vd0/data/videos:/movies:rw
            - /home/alex/downloads/deluge:/downloads:rw

    # Readarr
    readarr:
        container_name: readarr
        environment:
            - PUID=${UID}
            - PGID=${GID}
            - TZ=${TZ}
        image: hotio/readarr:nightly
        ports:
            - "8787:8787"
        restart: ${US}
        volumes:
            - ${CONFIG}/readarr:/config
            - /mnt/vd0/data/books:/books
            - /mnt/vd0/data/books/audiobooks:/audiobooks
            - /home/alex/downloads/deluge:/downloads
            - /etc/localtime:/etc/localtime:ro

    # Scrutiny
    scrutiny:
        cap_add:
            - SYS_RAWIO
            - SYS_ADMIN
        container_name: scrutiny
        devices:
            - /dev/sda:/dev/sda
            - /dev/sdb:/dev/sdb
            - /dev/sdc:/dev/sdc
            - /dev/sdd:/dev/sdd
            - /dev/sde:/dev/sde
            - /dev/sdf:/dev/sdf
        environment:
            - PGID=${UID}
            - PUID=${GID}
            - TZ=${TZ}
            - SCRUTINY_API_ENDPOINT=http://192.168.1.111:8088
            - SCRUTINY_WEB=true
            - SCRUTINY_COLLECTOR=true
        image: linuxserver/scrutiny
        ports:
            - "8088:8080"
        restart: ${US}
        volumes:
            - /homw/alex/.docker/config/scrutiny:/config
            - /run/udev:/run/udev:ro

    # Sonarr
    sonarr:
        container_name: sonarr
        environment:
            - PUID=${UID}
            - PGID=${GID}
            - TZ=${TZ}
        image: linuxserver/sonarr:preview
        ports:
            - "8989:8989"
        restart: ${US}
        volumes:
            - ${CONFIG}/sonarr:/config:rw
            - /mnt/vd0/data/videos:/tv:rw
            - /home/alex/downloads/deluge:/downloads:rw

    # Tautulli
    tautulli:
        container_name: tautulli
        environment:
            - PUID=${UID}
            - GUID=${GID}
            - TZ=${TZ}
        image: tautulli/tautulli:latest
        ports:
            - "8182:8181"
        restart: ${US}
        volumes:
            - ${CONFIG}/tautulli:/config:rw
            - ${CONFIG}/plex/Library/Application Support/Plex Media Server/Logs:/plex_logs:ro
    
    # Torrents.csv
    torrents-csv:
        container_name: torrents-csv
        environment:
            - PUID=${UID}
            - PGID=${GID}
            - TZ=${TZ}
            - TORRENTS_CSV_DB_FILE=/app/torrents.db
            - TORRENTS_CSV_FRONT_END_DIR=/app/dist
        image: dessalines/torrents-csv:v0.0.7.8
        ports:
            - "8902:8080"
        restart: ${US}
        volumes:
            - ${CONFIG}/torrents-csv/torrents.db:/app/torrents.db

    # Wordpress
    # wordpress:
    #     container_name: wordpress
    #     environment:
    #         - PUID=${UID}
    #         - PGID=${GID}
    #         - TZ=${TZ}
    #         - WORDPRESS_DB_NAME=${WP_DB_NAME}
    #         - WORDPRESS_TABLE_PREFIX=${WP_DB_TB_PREFIX}
    #         - WORDPRESS_DB_HOST=${WP_DB_HOST}
    #         - WORDPRESS_DB_PASSWORD=${WP_DB_PASSWORD}
    #     image: wordpress:5.3.0-php7.2-fpm
    #     ports:
    #         - "82:9000"
    #     restart: ${US}
    #     volumes:
    #         - /wordpress:/var/www/html
