#                                 #
# This is my docker compose file. #
#                                 #

version: "3.9"

# Services.
services:

    # Bitwarden
    bitwarden:
        container_name: bitwarden
        environment:
            - TZ=${TZ}
            - LOG_FILE=/data/bitwarden.log
            - SIGNUPS_ALLOWED=true
        image: bitwardenrs/server:latest
        ports:
            - "8000:80"
        restart: ${US}
        volumes:
            - ${CONFIG}/bitwarden:/data:rw

    # Deluge
#    deluge:
#        container_name: deluge
#        environment:
#            - PUID=${UID}
#            - PGID=${GID}
#            - TZ=${TZ}
#        image: linuxserver/deluge:latest
#        ports:
#            - "58846:58846"
#            - "58946:58946"
#            - "8112:8112"
#        restart: ${US}
#        volumes:
#            - ${CONFIG}/deluge:/config:rw
#            - /home/alex/downloads/deluge:/downloads:rw

    # Factorio
#    factorio:
#        container_name: factorio
#        environment:
#            - PUID=${UID}
#            - PGID=${GID}
#        image: factoriotools/factorio:latest
#        ports:
#            - "34197:34197/udp"
#            - "27015:27015"
#        restart: ${US}
#        volumes:
#            - ${CONFIG}/factorio:/factorio:rw

    # Frigate
#    frigate:
#        container_name: frigate
#        devices:
#            # - /dev/bus/usb:/dev/bus/usb # usb coral
#            - /dev/dri/renderD128
#        environment:
#            - TZ=${TZ}
#            - FRIGATE_RTSP_PASSWORD=${FRIGATE_RTSP_PW}
#        image: blakeblackshear/frigate:stable-amd64
#        ports:
#            - "5000:5000"
#            - "1935:1935"
#        privileged: true
#        restart: ${US}
#        shm_size: "64mb"
#        volumes:
#            - /etc/localtime:/etc/localtime:ro
#            - ${CONFIG}/frigate/config.yml:/config/config.yml
#            - /home/alex/frigate/storage:/media/frigate

    # Gitea
    gitea:
        container_name: gitea
        environment:
            - USER_UID=${UID}
            - USER_GID=${GID}
            - TZ=${TZ}
            - DB_TYPE={GITEA_DB_TYPE}
            - DB_HOST=${GITEA_DB_HOST}
            - DB_NAME=${GITEA_DB_DATABASE}
            - DB_USER=${GITEA_DB_USERNAME}
            - DB_PASSWD=${GITEA_DB_PASSWORD}
        image: gitea/gitea:latest
        ports:
            - "3000:3000"
            - "222:22"
        restart: ${US}
        volumes:
            - ${CONFIG}/gitea:/data
            - /etc/timezone:/etc/timezone:ro
            - /etc/localtime:/etc/localtime:ro
    
    # Grocy
    grocy:
        container_name: grocy
        environment:
            - PUID=${UID}
            - PGID=${GID}
            - TZ=${TZ}
        image: linuxserver/grocy
        ports:
            - "9283:80"
        restart: ${US}
        volumes:
            - ${CONFIG}/grocy:/config

    # Heimdall
    heimdall:
        container_name: heimdall
        environment:
            - PUID=${UID}
            - PGID=${GID}
            - TZ=${TZ}
        image: linuxserver/heimdall:latest
        ports:
            - "9009:80"
            - "9010:443"
        restart: ${US}
        volumes:
            - ${CONFIG}/heimdall:/config:rw

    # Jackett
    jackett:
        container_name: jackett
        environment:
            - PUID=${UID}
            - PGID=${GID}
            - TZ=${TZ}
        image: linuxserver/jackett:latest
        ports:
            - "9117:9117"
        restart: ${US}
        volumes:
            - ${CONFIG}/jackett:/config:rw
            - /home/alex/downloads/jackett:/downloads:rw
            - /etc/localtime:/etc/localtime:ro
    
    # MotionEye
#    motioneye:
#        container_name: motioneye
#        environment:
#            - PUID=${UID}
#            - GUID=${GID}
#            - TIMEZONE=${TZ}
#        hostname: motioneye
#        image: jshridha/motioneye:latest
#        ports:
#            - "8765:8765"
#        restart: ${US}
#        volumes:
#            - ${CONFIG}/motioneye:/config:rw

    # Nextcloud
#    nextcloud:
#        container_name: nextcloud
#        depends_on: 
#            - nextcloud_db
#        environment:
#            - PUID=${UID}
#            - GUID=${GID}
#            - TZ=${TZ}
#            - MYSQL_PASSWORD=${NXTCLD_DB_PW}
#            - MYSQL_DATABASE=${NXTCLD_DB_NAME}
#            - MYSQL_USER=${NXTCLD_DB_U}
#            - MYSQL_HOST=nextcloud_db:3306
#            - NEXTCLOUD_ADMIN_USER=${NXTCLD_A_U}
#            - NEXTCLOUD_ADMIN_PASSWORD=${NXTCLD_A_PW}
#        image: nextcloud
#        ports:
#            - "8181:80"
#        restart: ${US}
#        volumes:
#            - ${CONFIG}/nextcloud/config:/var/www/html/config:rw
#            - /mnt/vd0/data/nextcloud:/var/www/html:rw
#            - /mnt/vd0/data/nextcloud:/var/www/html/data:rw
#    nextcloud_db:
#        container_name: nextcloud_db
#        environment:
#            - MYSQL_ROOT_PASSWORD=${NXTCLD_DB_RPW} 
#            - MYSQL_DATABASE=${NXTCLD_DB_NAME}
#            - MYSQL_USER=${NXTCLD_DB_U}
#            - MYSQL_PASSWORD=${NXTCLD_DB_PW}
#        image: mariadb:10.5
#        restart: ${US}
#        volumes:
#            - "${CONFIG}/nextcloud_db:/var/lib/mysql"

    # Nginx proxy manager
#    nginx-proxy-manager:
#        container_name: nginx-proxy-manager
#        depends_on: 
#            - npm_db
#        environment:
#            - PUID=${UID}
#            - GUID=${GID}
#            - TZ=${TZ}
#        image: jc21/nginx-proxy-manager:latest
#        ports:
#            - "8181:81"
#            - "8081:80"
#            - "4443:443"
#        restart: ${US}
#        volumes:
#            - ${CONFIG}/nginx-proxy-manager/config:/app/config:rw
#            - ${CONFIG}/nginx-proxy-manager/data:/data:rw
#            - ${CONFIG}/nginx-proxy-manager/letsencrypt:/etc/letsencrypt:rw
#    npm_db:
#        container_name: npm_db
#        environment:
#            - TZ=${TZ}
#            - MYSQL_ROOT_PASSWORD=${NPM_DB_RPW}
#            - MYSQL_DATABASE=${NPM_DB_NAME}
#            - MYSQL_USER=${NPM_DB_U}
#            - MYSQL_PASSWORD=${NPM_DB_PW}
#        image: mariadb:10.4
#        restart: ${US}
#        volumes:
#            - ${CONFIG}/nginx-proxy-manager_db/:/var/lib/mysql:rw

    # Ouroboros
    ouroboros:
        container_name: ouroboros
        environment:
            - CLEANUP=true
            - CRON=0 4 * * *
            - LOG_LEVEL=info
            - SELF_UPDATE=true
            - IGNORE=mariadb
            - NOTIFIERS=${OUROBOROS_NOTIFIERS}
            - TZ=${TZ}
        image: pyouroboros/ouroboros:latest
        restart: ${US}
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock

    # Plex
    plex:
        container_name: plex
        devices:
            - "/dev/dri:/dev/dri"
        environment:
            - ADVERTISE_IP=http://192.168.1.111:32400/
            - PLEX_UID=${UID}
            - PLEX_GID=${GID}
            - TZ=${TZ}
            - PLEX_CLAIM=${PLEX_CLAIM}
              NVIDIA_DRIVER_CAPIBILITIES=compute,video,utility
            - NVIDIA_VISIBLE_DEVICES=all
        image: plexinc/pms-docker:latest
        ports:
            - "32400:32400"
        restart: ${US}
        volumes:
            - ${CONFIG}/plex:/config:rw
            - /home/alex/downloads/plex/transcode:/transcode:rw
            - /mnt/vd0/data/videos:/data:rw
        
    # Photoprism
#    photoprism:
#        container_name: photoprism
#        depends_on:
#            - photoprism_db
#        devices:
#            - "/dev/dri/renderD128:/dev/dri/renderD128"
#        environment:
#            - PUID=${UID}
#            - PGID=${GID}
#            - TZ=${TZ}
#            - PHOTOPRISM_ADMIN_PASSWORD=${PHOTO_ADMIN_PW}
#            - PHOTOPRISM_ORIGINALS_LIMIT=00
#            - PHOTOPRISM_HTTP_COMPRESSION=gzip
#            - PHOTOPRISM_DEBUG=false
#            - PHOTOPRISM_PUBLIC=false
#            - PHOTOPRISM_READONLY=false
#            - PHOTOPRISM_EXPERIMENTAL=false
#            - PHOTOPRISM_DISABLE_CHOWN=false
#            - PHOTOPRISM_DISABLE_WEBDAV=false
#            - PHOTOPRISM_DISABLE_SETTINGS=false
#            - PHOTOPRISM_DISABLE_TENSORFLOW=false
#            - PHOTOPRISM_DISABLE_FACES=false
#            - PHOTOPRISM_DISABLE_CLASSIFICATION=false
#            - PHOTOPRISM_DARKTABLE_PRESETS=false
#            - PHOTOPRISM_DETECT_NSFW=false
#            - PHOTOPRISM_UPLOAD_NSFW=true
#            - PHOTOPRISM_DATABASE_DRIVER=mysql
#            - PHOTOPRISM_DATABASE_SERVER=photoprism_db:3306
#            - PHOTOPRISM_DATABASE_NAME=${PHOTO_DB_NAME}
#            - PHOTOPRISM_DATABASE_USER=${PHOTO_DB_U}
#            - PHOTOPRISM_DATABASE_PASSWORD=${PHOTO_DB_PW}
#            - PHOTOPRISM_SITE_URL=http://192.168.1.111:2342/
#            - PHOTOPRISM_SITE_TITLE=PhotoPrism
#            - PHOTOPRISM_SITE_CAPTION=Browse Your Life
#            - PHOTOPRISM_SITE_DESCRIPTION=Fotoooooo's
#            - PHOTOPRISM_SITE_AUTHOR=Alex de Wekker
#            - PHOTOPRISM_UID=${UID}
#            - PHOTOPRISM_GID=${GID}
#            - PHOTOPRISM_INIT=tensorflow-amd64-avx2
#            - PHOTOPRISM_FFMPEG_BUFFERS=64
#            - PHOTOPRISM_FFMPEG_BITRATE=64
#            - PHOTOPRISM_FFMPEG_ENCODER=h264_qsv
#            - PHOTOPRISM_INIT=intel-graphics tensorflow-amd64-avx2
#            - HOME=/mnt/vd0/data/nextcloud/photos/photoprism
#        image: photoprism/photoprism:latest
#        restart: ${US}
#        ports:
#            - "2342:2342"
#        volumes:
#            - "/mnt/vd0/data/nextcloud/photos:/photoprism/originals:rw"
#            - "${CONFIG}/photoprism:/photoprism/storage:rw"
#        working_dir: "/mnt/vd0/data/nextcloud/photos/photoprism"
#    photoprism_db:
#        command: mysqld --transaction-isolation=READ-COMMITTED --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max-connections=512 --innodb-rollback-on-timeout=OFF --innodb-lock-wait-timeout=120
#        container_name: photoprism_db
#        environment:
#            - MYSQL_ROOT_PASSWORD=${PHOTO_DB_RPW} 
#            - MYSQL_DATABASE=${PHOTO_DB_NAME}
#            - MYSQL_USER=${PHOTO_DB_U}
#            - MYSQL_PASSWORD=${PHOTO_DB_PW}
#        image: mariadb:10.5
#        restart: ${US}
#        volumes:
#            - "${CONFIG}/photoprism_db:/var/lib/mysql"
    
    # Portainer
    portainer:
        command: -H unix:///var/run/docker.sock
        container_name: portainer
        environment:
            - TZ=${TZ}
        image: portainer/portainer-ce:latest
        ports:
            - "9000:9000"
        restart: ${US}
        volumes:
            - ${CONFIG}/portainer:/data:rw
            - /etc/localtime:/etc/localtime:ro
            - /home/alex/.docker/shared:/shared:rw
            - /var/run/docker.sock:/var/run/docker.sock:rw

    # Prowlarr
    prowlarr:
        container_name: prowlarr
        environment:
            - PUID=${UID}
            - PGID=${GID}
            - TZ=${TZ}
        image: linuxserver/prowlarr:develop
        ports:
            - "9696:9696"
        restart: ${US}
        volumes:
            - ${CONFIG}/prowlarr:/config:rw

    # QBittorrentVPN
    qbittorrentvpn:
        container_name: qbittorrentvpn
        environment:
            - TZ=${TZ}
            - VPN_ENABLED=yes
            - VPN_USERNAME=${VPN_USERNAME}
            - VPN_PASSWORD=${VPN_PASSWORD}
            - LAN_NETWORK=192.168.1.0/24
            - NAME_SERVERS=192.168.1.90,1.1.1.1
        image: markusmcnugen/qbittorrentvpn:latest
        ports:
            - "8080:8080"
            - "8999:8999"
            - "8999:8999/udp"
        privileged: true
        restart: ${US}
        volumes:
            - ${CONFIG}/qbittorrent:/config:rw
            - /home/alex/downloads/qbittorrentvpn:/downloads:rw

    # Radarr
    radarr:
        container_name: radarr
        environment:
            - PUID=${UID}
            - PGID=${GID}
            - TZ=${TZ}
        image: linuxserver/radarr:nightly
        ports:
            - "7878:7878"
        restart: ${US}
        volumes:
            - ${CONFIG}/radarr:/config:rw
            - /mnt/vd0/data/videos:/movies:rw
            - /home/alex/downloads/qbittorrentvpn:/downloads:rw

    # Scrutiny
    scrutiny:
        cap_add:
            - SYS_RAWIO
            - SYS_ADMIN
        container_name: scrutiny
        devices:
            - /dev/sda:/dev/sda
            - /dev/sdb:/dev/sdb
            - /dev/sdc:/dev/sdc
            - /dev/sdd:/dev/sdd
            - /dev/sde:/dev/sde
            - /dev/sdf:/dev/sdf
        environment:
            - PUID=${UID}
            - PGID=${GID}
            - TZ=${TZ}
            - SCRUTINY_API_ENDPOINT=http://192.168.1.111:8088
            - SCRUTINY_WEB=true
            - SCRUTINY_COLLECTOR=true
        image: linuxserver/scrutiny:latest
        ports:
            - "8088:8080"
        restart: ${US}
        volumes:
            - ${CONFIG}/scrutiny:/config
            - /run/udev:/run/udev:ro

    # Sky Factory
#    skyfactory:
#        container_name: skyfactory
#        environment:
#            - PGID=${UID}
#            - PUID=${GID}
#            - TZ=${TZ}
#            # - SERVER_OP=Niles018
#        image: cochief/skyfactory4
#        ports:
#            - "25566:25565"
#        restart: ${US}
#        volumes:
#            - ${CONFIG}/skyfactory/world:/minecraft/world
#            - ${CONFIG}/skyfactory/ops.json:/minecraft/ops.json
#            - ${CONFIG}/skyfactory/server.properties:/minecraft/server.properties
#            - ${CONFIG}/skyfactory/whitelist.json:/minecraft/whitelist.json

    # Sonarr
    sonarr:
        container_name: sonarr
        environment:
            - PUID=${UID}
            - PGID=${GID}
            - TZ=${TZ}
        image: linuxserver/sonarr:latest
        ports:
            - "8989:8989"
        restart: ${US}
        volumes:
            - ${CONFIG}/sonarr:/config:rw
            - /mnt/vd0/data/videos:/tv:rw
            - /home/alex/downloads/qbittorrentvpn:/downloads:rw

    # Tautulli
    tautulli:
        container_name: tautulli
        environment:
            - PUID=${UID}
            - GUID=${GID}
            - TZ=${TZ}
        image: tautulli/tautulli:latest
        ports:
            - "8182:8181"
        restart: ${US}
        volumes:
            - ${CONFIG}/tautulli:/config:rw
            - ${CONFIG}/plex/Library/Application Support/Plex Media Server/Logs:/plex_logs:ro
    
    # Tdarr
    tdarr:
        container_name: tdarr
        devices:
            - "/dev/dri:/dev/dri"
        environment:
            - TZ=${TZ}
            - PUID=${UID}
            - PGID=${GID}
            - UMASK_SET=002
            - serverIP=192.168.1.111
            - serverPort=8266
            - webUIPort=8265
            - internalNode=true
            - nodeID=SergeNode
        image: haveagitgat/tdarr:latest
        ports:
            - "8265:8265"
            - "8266:8266"
            - "8267:8267"
        restart: ${US}
        volumes:
            - ${CONFIG}/tdarr/server:/app/server
            - ${CONFIG}/tdarr/configs:/app/configs
            - ${CONFIG}/tdarr/logs:/app/logs
            - /mnt/vd0:/media
            - ${CONFIG}/tdarr/cache:/temp
    
    # Tekkit
#    tekkit:
#        container_name: tekkit
#        environment:
#            - PUID=${UID}
#            - GUID=${GID}
#            - TZ=${TZ}
#            # - SERVER_OP=Niles018
#        image: dang1t/tekkit-classic-docker:latest
#        ports:
#            - "25565:25565"
#        restart: ${US}
#        volumes:
#            - ${CONFIG}/tekkit-server/world:/minecraft/world
#            - ${CONFIG}/tekkit-server/world_nether:/minecraft/world_nether
#            - ${CONFIG}/tekkit-server/world_the_end:/minecraft/world_the_end
#            - ${CONFIG}/tekkit-server/plugins:/minecraft/plugins
    
    # Valheim
#    valheim-server:
#        container_name: valheim-server
#        environment:
#            - PUID=${UID}
#            - PGID=${GID}
#            - TZ=${TZ}
#            - SERVER_NAME=Kloenkerserver
#            - WORLD_NAME=Kloenkeraarde
#            - SERVER_PASS=Kloenker1
#        image: lloesche/valheim-server
#        ports:
#            - "2456-2458:2456-2458/udp"
#        restart: ${US}
#        volumes:
#            - ${CONFIG}/valheim:/config

