#                                            #
# This is my docker compose file for Arnold. #
#                                            #

# Services.
services:

    # Bookstack
    bookstack:
        container_name: bookstack
        environment:
            - PUID=${UID}
            - PGID=${GID}
            - TZ=${TZ}
            - APP_URL=http://${SERVER}.local:6875
            - DB_HOST=${IP}
            - DB_USER=${BKSTCK_DB_USER}
            - DB_PASS=${PW}
            - DB_DATABASE=${BKSTCK_DB_DATABASE}
        image: lscr.io/linuxserver/bookstack:latest
        ports:
            - "6875:80"
        restart: ${US}
        volumes:
            - ${CONFIG}/bookstack:/config

    # Esphome
    esphome:
        container_name: esphome
        environment:
            - PUID=${UID}
            - PGID=${GID}
            - TZ=${TZ}
            - USERNAME=${USER}
            - PASSWORD=${PW}
        image: ghcr.io/esphome/esphome:latest
        ports:
            - "6052:6052"
        restart: ${US}
        volumes:
            - ${CONFIG}/esphome:/config
            - /etc/localtime:/etc/localtime:ro

    # Homer
    homer:
        container_name: homer
        environment:
            - PUID=${UID}
            - GUID=${GID}
            - TZ=${TZ}
        image: b4bz/homer:latest
        ports:
            - "9009:8080"
        restart: ${US}
        volumes:
            - ${CONFIG}/homer/assets:/www/assets

    # Gitea
    gitea:
        container_name: gitea
        environment:
            - USER_UID=${UID}
            - USER_GID=${GID}
            - PUID=${UID}
            - PGID=${GID}
            - TZ=${TZ}
            - DB_TYPE=${GITEA_DB_TYPE}
            - DB_HOST=sql://${IP}:3306
            - DB_NAME=${GITEA_DB_DATABASE}
            - DB_USER=${GITEA_DB_USERNAME}
            - DB_PASSWD=${PW}
        image: gitea/gitea:latest
        ports:
            - "3000:3000"
            - "222:22"
        restart: ${US}
        volumes:
            - ${CONFIG}/gitea:/data
            - /etc/timezone:/etc/timezone:ro
            - /etc/localtime:/etc/localtime:ro

    # Nextcloud
    nextcloud:
        container_name: nextcloud
        environment:
            - PUID=${UID}
            - GUID=${GID}
            - TZ=${TZ}
            - MYSQL_PASSWORD=${PW}
            - MYSQL_DATABASE=${NXTCLD_DB_NAME}
            - MYSQL_USER=${NXTCLD_DB_U}
            - MYSQL_HOST=${IP}
            - NEXTCLOUD_ADMIN_USER=${USER}
            - NEXTCLOUD_ADMIN_PASSWORD=${PW}
            - REDIS_HOST=${IP}
        image: lscr.io/linuxserver/nextcloud:latest
        ports:
            - "3333:443"
        restart: ${US}
        volumes:
            - ${CONFIG}/nextcloud:/config
            - /mnt/vd0/data/nextcloud:/data

    # Nginx proxy manager
    nginx-proxy-manager:
        container_name: nginx-proxy-manager
        environment:
            - PUID=${UID}
            - GUID=${GID}
            - TZ=${TZ}
            - DB_MYSQL_HOST=${IP}
            - DB_MYSQL_PORT=${MDBPORT}
            - DB_MYSQL_USER=${NPM_DB_USER}
            - DB_MYSQL_PASSWORD=${PW}
            - DB_MYSQL_NAME=${NPM_DB_NAME}
        image: jc21/nginx-proxy-manager:latest
        ports:
            - "8181:81"
            - "8081:80"
            - "4443:443"
        restart: ${US}
        volumes:
            - ${CONFIG}/nginx-proxy-manager/config:/app/config
            - ${CONFIG}/nginx-proxy-manager/data:/data
            - ${CONFIG}/nginx-proxy-manager/letsencrypt:/etc/letsencrypt

    # Ouroboros
    ouroboros:
        container_name: ouroboros
        environment:
            - CLEANUP=true
            - CRON=0 4 * * *
            - LOG_LEVEL=info
            - SELF_UPDATE=true
            - NOTIFIERS=${OUROBOROS_NOTIFIERS}
            - TZ=${TZ}
        image: pyouroboros/ouroboros:latest
        restart: ${US}
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock

    # Paperless NGX
    paperless-ngx:
        container_name: paperless-ngx
        environment:
            - PUID=${UID}
            - PGID=${GID}
            - TZ=${TZ}
            - PAPERLESS_REDIS=redis://${IP}:6379
            - PAPERLESS_DBENGINE=mariadb
            - PAPERLESS_DBHOST=${IP}
            - PAPERLESS_DBUSER=${PPRLSS_DB_USER}
            - PAPERLESS_DBPASS=${PW}
            - PAPERLESS_DBPORT=${MDBPORT}
            - USERMAP_UID=${UID}
            - USERMAP_GID=${GID}
            - PAPERLESS_TIME_ZONE=${TZ}
            - PAPERLESS_SECRET_KEY=${PPRLSS_SECRET_KEY}
            - PAPERLESS_AUTO_LOGIN_USERNAME=${PPRLSS_AUTO_LOGIN_USERNAME}
            - PAPERLESS_ADMIN_USER=${PPRLSS_ADMIN_USER}
            - PAPERLESS_ADMIN_MAIL=${PPRLSS_ADMIN_MAIL}
            - PAPERLESS_ADMIN_PASSWORD=${PW}
            - PAPERLESS_OCR_LANGUAGE=eng
            - PAPERLESS_OCR_LANGUAGES=nld
        image: ghcr.io/paperless-ngx/paperless-ngx:latest
        ports:
            - "8000:8000"
        restart: ${US}
        volumes:
            - ${CONFIG}/paperless-ngx/data:/usr/src/paperless/data
            - ${CONFIG}/paperless-ngx/media:/usr/src/paperless/media
            - ${CONFIG}/paperless-ngx/export:/usr/src/paperless/export
            - /mnt/vd0/data/nextcloud/alex/files/InstantUpload/Office Lens:/usr/src/paperless/consume

    # Photoprism
    photoprism:
        container_name: photoprism
        devices:
            - "/dev/dri:/dev/dri"
        environment:
            - PUID=${UID}
            - PGID=${GID}
            - TZ=${TZ}
            - PHOTOPRISM_ADMIN_PASSWORD=${PW}
            - PHOTOPRISM_ORIGINALS_LIMIT=00
            - PHOTOPRISM_HTTP_COMPRESSION=gzip
            - PHOTOPRISM_DEBUG=false
            - PHOTOPRISM_PUBLIC=false
            - PHOTOPRISM_READONLY=false
            - PHOTOPRISM_EXPERIMENTAL=false
            - PHOTOPRISM_DISABLE_CHOWN=false
            - PHOTOPRISM_DISABLE_WEBDAV=false
            - PHOTOPRISM_DISABLE_SETTINGS=false
            - PHOTOPRISM_DISABLE_TENSORFLOW=false
            - PHOTOPRISM_DISABLE_FACES=false
            - PHOTOPRISM_DISABLE_CLASSIFICATION=false
            - PHOTOPRISM_DARKTABLE_PRESETS=false
            - PHOTOPRISM_DETECT_NSFW=false
            - PHOTOPRISM_UPLOAD_NSFW=true
            - PHOTOPRISM_DATABASE_DRIVER=mysql
            - PHOTOPRISM_DATABASE_SERVER=${IP}:3306
            - PHOTOPRISM_DATABASE_NAME=${PHOTO_DB_NAME}
            - PHOTOPRISM_DATABASE_USER=${PHOTO_DB_U}
            - PHOTOPRISM_DATABASE_PASSWORD=${PW}
            - PHOTOPRISM_SITE_URL=http://${SERVER}.local:2342/
            - PHOTOPRISM_SITE_TITLE=PhotoPrism
            - PHOTOPRISM_SITE_CAPTION=Browse Your Life
            - PHOTOPRISM_SITE_DESCRIPTION=Fotoooo's
            - PHOTOPRISM_SITE_AUTHOR=${USER} de Wekker
            - PHOTOPRISM_UID=${UID}
            - PHOTOPRISM_GID=${GID}
            - PHOTOPRISM_UMASK=0000
            - PHOTOPRISM_FFMPEG_BUFFERS=64
            - PHOTOPRISM_FFMPEG_BITRATE=64
            - PHOTOPRISM_FFMPEG_ENCODER=intel
            - PHOTOPRISM_INIT=intel tensorflow
            - PHOTOPRISM_FACE_CLUSTER_SCORE=5
            - PHOTOPRISM_FACE_CLUSTER_CORE=1
            - PHOTOPRISM_FACE_SCORE=5
            - HOME=/mnt/vd0/data/nextcloud/alex/files
        image: photoprism/photoprism:latest
        restart: ${US}
        ports:
            - "2342:2342"
        volumes:
            - "/mnt/vd0/data/nextcloud/alex/files/InstantUpload:/photoprism/originals/nextcloud"
            - "${CONFIG}/photoprism:/photoprism/storage"

    # Portainer
    portainer:
        command: -H unix:///var/run/docker.sock
        container_name: portainer
        environment:
            - PUID=${UID}
            - PGID=${GID}
            - TZ=${TZ}
        image: portainer/portainer-ce:latest
        ports:
            - "9000:9000"
        restart: ${US}
        volumes:
            - ${CONFIG}/portainer:/data
            - /etc/localtime:/etc/localtime:ro
            - ${CONFIG}/../shared:/shared
            - /var/run/docker.sock:/var/run/docker.sock

    # Scrutiny
    scrutiny:
        cap_add:
            - SYS_RAWIO
        container_name: scrutiny
        devices:
            - /dev/sda:/dev/sda
            - /dev/sdb:/dev/sdb
            - /dev/nvme0n1:/dev/nvme0n1
            - /dev/nvme1n1:/dev/nvme1n1
        environment:
            - PUID=${UID}
            - PGID=${GID}
            - TZ=${TZ}
        image: ghcr.io/analogj/scrutiny:master-omnibus
        ports:
            - "8088:8080"
            - "8086:8086"
        restart: ${US}
        volumes:
            - ${CONFIG}/scrutiny:/opt/scrutiny/config
            - ${CONFIG}/scrutiny/influxdb:/opt/scrutiny/influxdb
            - /run/udev:/run/udev:ro

    # Tdarr Node
    tdarr-node:
        container_name: tdarr-node
        devices:
            - "/dev/dri:/dev/dri"
        environment:
            - PUID=${UID}
            - PGID=${GID}
            - TZ=${TZ}
            - UMASK_SET=002
            - serverIP=${TDARR_SERVER_IP}
            - serverPort=8266
            - inContainer=true
            - nodeName=${SERVER}Node
            - ffmpegVersion=6
        image: ghcr.io/haveagitgat/tdarr_node:latest
        ports:
            - "8265:8265"
            - "8266:8266"
            - "8267:8267"
        restart: ${US}
        volumes:
            - ${CONFIG}/tdarr/configs:/app/configs
            - ${CONFIG}/tdarr/logs:/app/logs
            - /media/serge/mergerfs:/media
            - ${CONFIG}/../../downloads/tdarr/cache:/temp
